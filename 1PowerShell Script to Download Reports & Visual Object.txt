# Define the base folder path at the beginning of the script
$baseFolderPath = "C:\Power BI Backups"

# Define workspace ID from desired Power BI Workspace
$workspaceid = "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX"


# Check and set the execution policy
$currentPolicy = Get-ExecutionPolicy -Scope CurrentUser
if ($currentPolicy -eq 'Restricted') {
    Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser -Force
}

# Check and install the necessary modules
$requiredModules = @('MicrosoftPowerBIMgmt', 'ImportExcel')
foreach ($module in $requiredModules) {
    if (-not (Get-Module -ListAvailable -Name $module)) {
        Install-Module -Name $module -Scope CurrentUser -Force
    }
}

Import-Module ImportExcel
Import-Module MicrosoftPowerBIMgmt

# Login to Power BI
Login-PowerBI

$reports = Get-PowerBIReport -WorkspaceId $workspaceid

# Define the report backups path
$reportBackupsPath = Join-Path -Path $baseFolderPath -ChildPath "Report Backups"

# Check if the "Report Backups" folder exists, if not create it
if (-not (Test-Path -Path $reportBackupsPath)) {
    New-Item -Path $reportBackupsPath -ItemType Directory
}

# Create a variable for end of week (Friday) date
$date = (Get-Date -UFormat "%Y-%m-%d")

# Create a new folder for the end of week backups
$new_date_folder = Join-Path -Path $reportBackupsPath -ChildPath $date
New-Item -Path $new_date_folder -ItemType Directory -Force

# Export each report in the workspace
foreach ($report in $reports) {
    $filename = $report.Name -replace "[^a-zA-Z0-9]", " " # Clean up the file name
    $filename = "$filename.pbix"
    $filepath = Join-Path -Path $new_date_folder -ChildPath $filename
    Export-PowerBIReport -Id $report.Id -OutFile $filepath
}

Write-Output "Reports exported to $new_date_folder"

# Start Tabular Editor process
$p = Start-Process -filePath "C:\Program Files (x86)\Tabular Editor 2\TabularEditor.exe" -Wait -NoNewWindow -PassThru `
       -ArgumentList "`"$baseFolderPath\Blank Model.bim`" -S `"$baseFolderPath\CC-Tabular Editor Visual Object Layer Script.csx`" -B `"localhost\tabular`" `"MyModel`""


# Define the output Excel file path in the parent folder
$outputExcelFile = Join-Path -Path $baseFolderPath -ChildPath "VisualObjectLayer.xlsx"

# Check if the Excel file already exists
if (Test-Path -Path $outputExcelFile) {
    $excelExists = $true
} else {
    $excelExists = $false
}

foreach ($txtFile in (Get-ChildItem -Path $new_date_folder -Filter *.txt)) {
    # Get the base name of the file (without extension) for the worksheet name
    $worksheetName = [System.IO.Path]::GetFileNameWithoutExtension($txtFile.FullName)
    
    # Import the TXT file, assuming it's tab-delimited
    $txtData = Get-Content -Path $txtFile.FullName -Encoding UTF8 | ConvertFrom-Csv -Delimiter "`t"

    if ($excelExists) {
        # Append data to the existing Excel file
        $txtData | Export-Excel -Path $outputExcelFile -WorksheetName $worksheetName -AutoNameRange -Append
    } else {
        # Create a new Excel file with the data
        $txtData | Export-Excel -Path $outputExcelFile -WorksheetName $worksheetName -AutoNameRange
        $excelExists = $true
    }
}

    Write-Output "TXT files appended to $outputExcelFile"
